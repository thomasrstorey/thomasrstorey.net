<section class="page-body">
  <div class="container">
    <div class="row">
      <div class="twelve columns">
        {{{renderSlideshow page.images}}}
      </div>
    </div>
    <div class="row">
      <div class="offset-by-three six columns page-content">
        <h2>{{{page.title}}}</h2>
      <h3>Syllabus</h3>
      <h5>Course Description</h5>
      <p>
      This course introduces the use of the computers and programming to create art. It assumes
minimal prior experience in programming, and asks for only a little math (If you remember some
algebra and trigonometry you’ll be ahead of the curve). Programming for Artists will be highly
practice/project based. We will be doing a lot of in-class work and exercises. In addition we will take
some time to become acquainted to the worlds and histories of computer science, computer art, net
art, generative art, etc for inspiration, and so that we can contextualize our work in the larger
computational milieu. We will be introduced to various programming languages, but all work and
projects will be done in Processing (processing.org). This class will not make you a computer scientist,
but if you apply yourself with interest and enthusiasm, you will start on your way to becoming a
programmer.
</p>
<h5>
Objectives</h5>
<p>
Students taking this course will:
</p>
<ul>
<li>Practice the basics of programming languages and structure.</li>
<li>Develop and implement software projects.</li>
<li>Implement basic object-oriented programming techniques.</li>
<li>Practice professional programming best-practices and documentation.</li>
<li>Gain a proficiency in Processing and Java programming languages.</li>
<li>Harness concepts of computational aesthetics in artmaking.</li>
<li>Interface custom code with existing APIs and libraries.</li>
<li>Apply basic trigonometry and linear algebra to graphics and interactive programming.</li>
<li>Survey past and contemporary computational art.</li>
<li>Analyze, deconstruct and build potential solutions for projects/problems.Course Components</li>
</ul>
<p>
As a student in this class, you are expected to:</p>
<ul>
<li>Attend every class and being attentive and enthusiastic!</li>
<li>Work on programming exercises and activities in class.</li>
<li>Work on programming projects and assignments in and out of class.</li>
<li>Turn in your work on time via your page on the wiki.</li>
<li>Read, watch videos and engage in discussion about computer art in and out of class</li>
</ul>
<h5>
Topical Course Outline</h5>
<ul>
  Week 1 → Introduction
<li>What is programming?</li>
<li>Code and Computer Graphics</li>
<li>What is Processing?</li>
<li>The Processing environment</li>
</ul>
<ul>
  Week 2 → The basics
<li>Values, Types</li>
<li>Operators, Variables</li>
<li>
  Expressions
</li>
<li>
  Program Structure &amp; Flow, Conditionals &amp; Loops
</li>
</ul>
<ul>
Week 3 → Building on the basics Part 1
<li>Functions</li>
<li>Objects, Classes, Constructors</li>
</ul>
<ul>
Week 4 → Building on the basics Part 2
<li>Arrays</li>
</ul>
<ul>
Week 5 → Building on the basics Part 3
<li>Algorithms</li>
<li>Debugging</li>
</ul>
<ul>
Week 6 → Techniques
<li>Libraries</li>
<li>[MIDTERM EXAM]</li>
<li>Project 1 Proposals</li>
</ul>
<ul>
Week 7 → Techniques
<li>Math, Trigonometry</li>
<li>3DWeek 8 → Techniques</li>
<li>Pixels, Images, Video</li>
</ul>
<ul>
Week 9 → [SPRING BREAK]
</ul>
<ul>
Week 10 → Techniques
<li>Text manipultaion, Data input</li>
</ul>
<ul>
Week 11 → Techniques
<li>Sound</li>
<li>Exporting</li>
</ul>
<ul>
Week 12 → Techniques
<li>Java</li>
<li>Object Oriented Programming</li>
<li>Encapsulation, Inheritance, Polymorphism</li>
<li>Final Project Proposals</li>
</ul>
<ul>
Week 13 → Applications
<li>Work on Final Project</li>
<li>Special Topics</li>
</ul>
<ul>
Week 14 → Applications
<li>Work on Final Project</li>
<li>Special Topics</li>
</ul>
<ul>
Week 15 → Applications
<li>Work on Final Project</li>
<li>Special Topics</li>
</ul>
<ul>
Week 16 → Final Considerations
<li>Final Critique</li>
</ul>
      </div>
    </div>
  </div>

</section>
